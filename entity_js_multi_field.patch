diff --git a/entity_js.module b/entity_js.module
index 3a98933..179cf3a 100644
--- a/entity_js.module
+++ b/entity_js.module
@@ -131,7 +131,8 @@ function entity_js_update_entity($entity_type, $entity_id) {
         return drupal_access_denied();
       }
       try {
-        $entity = (object) array_merge((array) $entity, $_POST['values']);
+        // Temporarily suppress errors.
+        $entity = (object) @array_replace_recursive((array) $entity, $_POST['values']);
         entity_save($entity_type, $entity);
         $response = 'Success';
       }
@@ -243,3 +244,36 @@ function entity_js_efq_json() {
   }
 }
 
+/**
+ * Helper function to merge two arrays.
+ *
+ * See http://www.php.net/manual/en/function.array-replace-recursive.php#109390.
+ */
+if (!function_exists('array_replace_recursive')) {
+  function array_replace_recursive($base, $replacements) { 
+    foreach (array_slice(func_get_args(), 1) as $replacements) { 
+      $bref_stack = array(&$base); 
+      $head_stack = array($replacements); 
+
+      do { 
+        end($bref_stack); 
+
+        $bref = &$bref_stack[key($bref_stack)]; 
+        $head = array_pop($head_stack); 
+
+        unset($bref_stack[key($bref_stack)]); 
+
+        foreach (array_keys($head) as $key) { 
+          if (isset($key, $bref) && is_array($bref[$key]) && is_array($head[$key])) { 
+            $bref_stack[] = &$bref[$key]; 
+            $head_stack[] = $head[$key]; 
+          } else { 
+            $bref[$key] = $head[$key]; 
+          } 
+        } 
+      } while(count($head_stack)); 
+    } 
+
+    return $base; 
+  } 
+}
